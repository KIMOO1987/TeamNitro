initializeANSI()
{
esc=""
redf="${esc}[31m";     greenf="${esc}[32m"
yellowf="${esc}[33m"   bluef="${esc}[34m";
cyanf="${esc}[36m";    purplef="${esc}[35m"
redfbright="${esc}[91m";     greenfbright="${esc}[92m"
yellowfbright="${esc}[93m"   bluefbright="${esc}[94m";
cyanfbright="${esc}[96m";    purplefbright="${esc}[95m"
boldon="${esc}[1m";
reset="${esc}[0m"
}
initializeANSI
cat << EOF
${boldon}${redfbright}â– â– â– â– â– â– â– â–  ${boldon}${greenfbright}  â– â– â– â– â– â– â– â–  ${boldon}${yellowfbright}        â–   ${boldon}${bluefbright}      â– â– â–         â– â– â–  ${boldon}${redfbright}  â– â– â– â–       â– â–  ${boldon}${greenfbright}  â– â– â– â–  ${boldon}${yellowfbright}  â– â– â– â– â– â– â– â–  ${boldon}${bluefbright}  â– â– â– â– â– â–  ${boldon}${purplefbright}      â– â– â– â–  ${reset}
${boldon}${redfbright}â–   â– â–   â–  ${boldon}${greenfbright}   â– â–       ${boldon}${yellowfbright}       â– â– â–  ${boldon}${bluefbright}         â– â–     â– â–     ${boldon}${redfbright}     â– â–      â– â–  ${boldon}${greenfbright}   â– â–   ${boldon}${yellowfbright}  â–   â– â–   â–  ${boldon}${bluefbright}   â– â–    â– â–  ${boldon}${purplefbright}  â– â–     â– â–  ${reset}
${boldon}${redfbright}   â– â–     ${boldon}${greenfbright}   â– â–       ${boldon}${yellowfbright}      â– â– â– â– â– ${boldon}${bluefbright}       â– â–   â– â– â– â–   â– â–   ${boldon}${redfbright}   â– â–  â– â–     â– â–  ${boldon}${greenfbright}   â– â–   ${boldon}${yellowfbright}     â– â–     ${boldon}${bluefbright}   â– â–     â– â–  ${boldon}${purplefbright} â– â–     â– â–  ${reset}
${boldon}${redfbright}   â– â–     ${greenf}   â– â– â– â– â– â–  ${yellowf}      â– (   )â–    ${bluef}   â– â–    â– â–    â– â–  ${redf}    â– â–   â– â–    â– â–  ${greenf}   â– â–  ${yellowf}      â– â–  ${bluef}      â– â–    â– â–  ${purplef}  â– â–     â– â–  ${reset}
${boldon}${redfbright}   â– â–     ${greenf}   â– â–      ${yellowf}     â– â– â– â–  â– â– â– â–   ${bluef}   â– â–         â– â–  ${redf}    â– â–    â– â–   â– â–  ${greenf}   â– â–  ${yellowf}      â– â–  ${bluef}      â– â–  â– â–    ${purplef}  â– â–     â– â–  ${reset}
${boldon}${redfbright}   â– â–     ${greenf}   â– â–      ${yellowf}    â– â–        â– â–  ${bluef}   â– â–         â– â–  ${redf}    â– â–     â– â–     ${greenf}   â– â–  ${yellowf}      â– â–  ${bluef}      â– â–    â– â–  ${purplef}  â– â–     â– â–  ${reset}
${boldon}${redfbright}  â– â– â– â–    ${greenf}  â– â– â– â– â– â– â– â– ${yellowf}   â– â–          â– â– ${bluef}   â– â–         â– â–  ${redf}    â– â–      â– â– â– â–  ${greenf}  â– â– â– â– ${yellowf}     â– â– â– â– ${bluef}     â– â– â– â–    â– â– ${purplef}    â– â– â– â–  ${reset}
${boldon}${yellowfbright}				    TeamNitro ControlCenter skyPoster Updating ${reset}
EOF
python /usr/lib/enigma2/python/Plugins/Extensions/TeamNitro/slyk/scraper.py
echo 1 > /proc/sys/vm/drop_caches
echo 2 > /proc/sys/vm/drop_caches
echo 3 > /proc/sys/vm/drop_caches
if test -f /usr/lib/enigma2/python/Plugins/Extensions/TeamNitro/slyk/all_channel_data.json; then
python /usr/lib/enigma2/python/Plugins/Extensions/TeamNitro/slyk/picker.py
fi
MY_RESULT=$?
if [ $MY_RESULT -eq 0 ]; then
echo "#########################################################"
echo "#           skyTeamNitro Update Successfully            #"
echo "#             BY TeamNitro - support on                 #"
echo "#       https://www.tunisia-sat.com/forums/forums       #"
echo "#########################################################"
else
echo "   >>>>   INSTALLATION FAILED !   <<<<"
fi;
echo '**************************************************'
echo '**                   FINISHED                   **'
echo '**************************************************'
echo ''
exit 0
else
echo ''
echo "Download failed !"
exit 1
fi